syntax = "proto3";

import "google/protobuf/timestamp.proto";

package jobmanager;

// ---------------------------
// Service API
// ---------------------------

// All headers to service must include Corr-Id header
service JobManagerController {
    // get all jobs with paging options
    rpc getAllJobs(GetJobsRequest) returns (GetJobsResponse);
    
    // get all jobs currently being processed and scanned
    rpc getAllJobsInProgress(GetJobsRequest) returns (GetJobsResponse);

    // create new job
    rpc createNewJob(CreateNewJobReqest) returns (CreateNewJobResponse);

    // delete a job and all related data
    rpc deleteJobAndAllData(DeleteJobRequest) returns (DeleteJobResponse);

    // gives list of available sources for adding to a new job
    rpc getAvailableSources(GetAvailableSourcesRequest) returns (GetAvailableSourcesResponse);

    // start scanning a job for image files and run data extraction services
    rpc startScanningJob(StartScanningJobRequest) returns (StartScanningJobResponse);

    // get image data stored for a given job
    rpc getImages(GetImagesRequest) returns (GetImagesResponse);
}

// ---------------------------
// Message definitions
// ---------------------------

// job data and scanning progress
message Job {
    string id = 1;
    string name = 2;
    string description = 3;
    string source = 4;
    uint64 images = 5;
    uint64 jpegs = 6;
    uint64 pngs = 7;
    string user_id = 8;
    google.protobuf.Timestamp created_at = 9;
    bool scanned = 10;
    bool in_progress = 11;
}

message JobList {
    repeated Job values = 1;
}

// information for sources
message SourceInfo {
    // name of folder found in /service-jobs/sources or in /volumes if unix/linux and mounted on container
    string name = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp modified_at = 3;
}

message SourceList {
    repeated SourceInfo values = 1;
}

// Service error info
message ServiceError {
    uint32 code = 1;
    string type = 2;
    string message = 3;
    google.protobuf.Timestamp date = 4;
}

message ErrorList {
    repeated ServiceError values = 1;
}

enum Order {
    ORDER_UNSPECIFIED = 0;
    ASC   = 1;
    DESC  = 2;
}

message FaceData {
    string hash = 1;
    int32 x = 2;
    int32 y = 3;
    int32 width = 4;
    int32 height = 5;
}

message Image {
    string id = 1;
    string filename = 2;
    string mimetype = 3;
    float filesize = 4;
    int32 width = 5;
    int32 height = 6;
    string format = 7;
    string colorspace = 8;
    string resolution = 9;
    int32 depth = 10;
    string source = 11;
    google.protobuf.Timestamp createdAt = 12;
    string md5 = 13;
    string sha1 = 14;
    string exifData = 15;
    repeated FaceData faces = 16;
    repeated string tags = 17;
}

message ImageList {
    repeated Image values = 1;
}

// ---------------------------
// Requests / Responses
// ---------------------------

// include X-Correlation-ID header
message GetJobsRequest {
    // number of jobs you wish to return
    uint32 items = 1;
    // cursor (id) of job you wish to start paging from - use blank string '' for first request
    string cursor = 2;
    // order of jobs sorted by creation date - either asc or desc
    Order order = 3;
}

message GetJobsResponse {
    oneof result {
        JobList jobs = 1;
        ErrorList errors = 2;
    }
}

message CreateNewJobReqest {
    string name = 1;
    string description = 2;
    string source = 3;
    string user_id = 4;
}

message CreateNewJobResponse {
    oneof result {
        string id = 1;
        ErrorList errors = 2;
    }
}

message DeleteJobRequest {
    string id = 1;
}

message DeleteJobResponse {
    oneof result {
        bool success = 1;
        ErrorList errors = 2;
    }
}

message GetAvailableSourcesRequest {}

message GetAvailableSourcesResponse {
    oneof result {
        SourceList sources = 1;
        ErrorList errors = 2;
    }
}

message StartScanningJobRequest {
    string id = 1;
}

message StartScanningJobResponse {
    oneof result {
        // state of job: started | in-progress | completed
        string state = 1;
        ErrorList errors = 2;
    }
}

message GetImagesRequest {
    // id of job for images
    string jobId = 1;
    // number of images you wish to return
    uint32 items = 2;
    // cursor (id) of image you wish to start paging from - use blank string '' for first request
    string cursor = 3;
    // order of images sorted by source - either asc or desc
    Order order = 4;
}

message GetImagesResponse {
    oneof result {
        ImageList images = 1;
        ErrorList errors = 2;
    }
}
